name: nextjs-trpc-nestjs-boilerplate
version: '1.0'

services:
  postgres:
    image: postgres:16.1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./apps/api/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
  
  api:
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile.dev
    ports:
      - 3000:3000
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?ssl=false&schema=public
      GOOGLE_CLIENT_ID: ${AUTH_GOOGLE_ID}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 1000 # Try launching the API service as long as possible. Required for other services to start
    networks:
      - backend

  web:
    build:
      context: ./
      dockerfile: ./apps/web/Dockerfile.dev
    ports:
      - 8090:8090
    environment:
      NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL}
      AUTH_SECRET: ${AUTH_SECRET}
      AUTH_GOOGLE_ID: ${AUTH_GOOGLE_ID}
      AUTH_GOOGLE_SECRET: ${AUTH_GOOGLE_SECRET}
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - .:/app
    depends_on:
      api:
        condition: service_healthy
   
networks:
  backend:
